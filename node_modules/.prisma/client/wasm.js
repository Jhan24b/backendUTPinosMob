
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.22.0
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "5.22.0",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.MallaScalarFieldEnum = {
  id: 'id',
  cod: 'cod',
  carrera: 'carrera',
  year: 'year'
};

exports.Prisma.CursosMallaScalarFieldEnum = {
  id: 'id',
  idMalla: 'idMalla'
};

exports.Prisma.CursoScalarFieldEnum = {
  id: 'id',
  cod: 'cod',
  nombre: 'nombre',
  creditos: 'creditos',
  horas: 'horas',
  semestre: 'semestre',
  cursosMallaId: 'cursosMallaId'
};

exports.Prisma.CursoMatriculadoScalarFieldEnum = {
  id: 'id',
  averageGrade: 'averageGrade',
  salon: 'salon',
  profesor: 'profesor',
  idCurso: 'idCurso',
  vez: 'vez',
  status: 'status',
  periodoMatriculadoId: 'periodoMatriculadoId',
  diasClase: 'diasClase',
  horaInicio: 'horaInicio'
};

exports.Prisma.NotaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  calificacion: 'calificacion',
  peso: 'peso',
  cursoMatriculadoId: 'cursoMatriculadoId'
};

exports.Prisma.PagosScalarFieldEnum = {
  id: 'id',
  cod: 'cod',
  descripcion: 'descripcion',
  monto: 'monto',
  fechaVencimiento: 'fechaVencimiento',
  estado: 'estado',
  urlRecibo: 'urlRecibo',
  tipo: 'tipo',
  usuarioId: 'usuarioId',
  periodoMatriculadoId: 'periodoMatriculadoId'
};

exports.Prisma.ServiciosScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  tipo: 'tipo',
  fechas: 'fechas'
};

exports.Prisma.TramitesScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  tipo: 'tipo',
  costo: 'costo',
  requisitos: 'requisitos',
  descripcion: 'descripcion'
};

exports.Prisma.PeriodoMatriculadoScalarFieldEnum = {
  id: 'id',
  semestre: 'semestre',
  periodo: 'periodo',
  idUsuario: 'idUsuario'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  email: 'email',
  carrera: 'carrera',
  password: 'password',
  image: 'image',
  emailVerified: 'emailVerified'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  type: 'type',
  access_token: 'access_token',
  refresh_token: 'refresh_token',
  expires_at: 'expires_at',
  scope: 'scope',
  id_token: 'id_token',
  token_type: 'token_type'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires'
};

exports.Prisma.TramitesRealizadosScalarFieldEnum = {
  id: 'id',
  idTramite: 'idTramite',
  idUsuario: 'idUsuario',
  fechas: 'fechas',
  documentos: 'documentos',
  estado: 'estado',
  adicional: 'adicional'
};

exports.Prisma.ServiciosUtilizadosScalarFieldEnum = {
  id: 'id',
  idServicio: 'idServicio',
  idUsuario: 'idUsuario',
  fechaRegistro: 'fechaRegistro',
  horarioElegido: 'horarioElegido',
  estado: 'estado'
};

exports.Prisma.ConfirmacionPagoScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  amount: 'amount',
  currency: 'currency',
  paymentStatus: 'paymentStatus',
  sessionId: 'sessionId',
  receiptUrl: 'receiptUrl',
  createdAt: 'createdAt'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  start: 'start',
  end: 'end',
  isAllDay: 'isAllDay',
  notificationTime: 'notificationTime',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  idUsuario: 'idUsuario'
};

exports.Prisma.TaskScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  category: 'category',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  completed: 'completed',
  idUsuario: 'idUsuario'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  Malla: 'Malla',
  CursosMalla: 'CursosMalla',
  Curso: 'Curso',
  CursoMatriculado: 'CursoMatriculado',
  Nota: 'Nota',
  Pagos: 'Pagos',
  Servicios: 'Servicios',
  Tramites: 'Tramites',
  PeriodoMatriculado: 'PeriodoMatriculado',
  Usuario: 'Usuario',
  Account: 'Account',
  Session: 'Session',
  TramitesRealizados: 'TramitesRealizados',
  ServiciosUtilizados: 'ServiciosUtilizados',
  confirmacionPago: 'confirmacionPago',
  Event: 'Event',
  Task: 'Task'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
